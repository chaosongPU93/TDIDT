function [perm, pol] = GetRotsChao(FLAG,fam,datapath,sft2,sft3)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This function is to get the rotation parameters of the permanent and
% polaris stations, including split correction and optimal polarization
% angles, according to fam number and centroid shifts based on Chao's new
% calculations, calc_rots_norespv3
%
%   Mostly for all fams using the TWKB trio!!! 
%
%   2021/10/21: recommend to use 'GetRotsCommon' that allows the FLAG indicating
%   the type of the detector
%
% Modified by Chao Song, chaosong@princeton.edu
% First created date:   2019/08/27
% Last modified date:   2021/10/21
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%% Meanning of each column in PERMROTS/POLROTS %%%%%%%%
%%% 1. offset in samples between fast/slow direction, unit in 40 sps
%%% 2. rotation angle to get fast/slow direction
%%% 3. rotation angle to maximize the energy/particle motion/polarization
%%% 4. offset in samples between the arrival times at different stations, unit in 40 sps
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

if isequal(FLAG,'PGC')
% if isequal(fam,'243') || isequal(fam,'240')
  if strcmp(fam, '002')
  warning("Better not use 'GetRotsChao' for fam 002 with PGC trio");
  end
  lo = 0.5;
  hi = 6.5;
  sps = 40;
  bef = 25;
  aft = 35;
  nsta = 7;
  PREFIX = strcat(fam,'rot_para',num2str(lo),'-',num2str(hi),'_',num2str(bef),'_',...
    num2str(aft),'PGC');
  ROTS = load(strcat(datapath, '/split_chao/pgctrio/',...
    PREFIX,'_',num2str(sps),'sps',num2str(nsta),'stas'));
%   ROTS = load(strcat('/home/data2/chaosong/matlab/allan/data-no-resp/split_chao/pgctrio/',...
%     PREFIX,'_',num2str(sps),'sps',num2str(nsta),'stas'));

  % the order in ROTS from the result file generated by calc_rots_noresp
  % is PGC,SSIB,SILB,LZB,TWKB,MGCB,KLNB,
  % make sure the order accords with the PERMSTA and POLSTA
  perm(1,:) =  ROTS(1,:);
  perm(2,:) =  ROTS(4,:);
  perm(2,4) = perm(2,4)+sft2;    % LZB (sta #2) plus centroid shift 2

  pol(1:2,:) =  ROTS(2:3,:);
  pol(3,:) =  ROTS(7,:);
  pol(4,:) =  ROTS(6,:);
  pol(5,:) =  ROTS(5,:);      % TWKB should be the sta #1

  pol(4,4) = pol(4,4)+sft3;   % MGCB (sta #3) plus centroid shift 3
  % keyboard

elseif isequal(FLAG,'TWKB') || isequal(FLAG,'LZB') 
% else
  lo = 0.5;
  hi = 6.5;
  sps = 40;
  bef = 25;
  aft = 35;
  nsta = 7;
  famp1 = ['002';'043';'141';'047';'010';'099';'017';'001';'019';'021';'045';'076';'176';'015';...
    '158';'231';'234';'006'];
  famp2 = ['144';'068';'125';'147'];
  if ismember(fam,famp1,'rows')
    PREFIX = strcat(fam,'rot_para',num2str(lo),'-',num2str(hi),'_',num2str(bef),'_',...
      num2str(aft),'LZB');
  elseif ismember(fam,famp2,'rows')
    PREFIX = strcat(fam,'rot_para',num2str(lo),'-',num2str(hi),'_',num2str(bef),'_',...
      num2str(aft),'TWKB');
  end
  ROTS = load(strcat(datapath, '/split_chao/lzbtrio/',...
    PREFIX,'_',num2str(sps),'sps',num2str(nsta),'stas'));

  % the order in ROTS from the result file generated by calc_rots_noresp
  % is PGC,SSIB,SILB,LZB,TWKB,MGCB,KLNB,
  % make sure the order accords with the PERMSTA and POLSTA
  perm(1,:) =  ROTS(1,:);
  perm(2,:) =  ROTS(4,:);
  perm(2,4) = perm(2,4)+sft2;    % LZB (sta #2) plus centroid shift 2

  pol(1:2,:) =  ROTS(2:3,:);
  pol(3,:) =  ROTS(7,:);
  pol(4,:) =  ROTS(6,:);
  pol(5,:) =  ROTS(5,:);      % TWKB should be the sta #1

  pol(4,4) = pol(4,4)+sft3;   % MGCB (sta #3) plus centroid shift 3
  % keyboard
        
end